/**
 * Instant Codec 0.1.0 Angular module
 * https://github.com/jlapolla/instant-codec
 *
 * Copyright (c) 2016 Justin LaPolla
 * Released under the MIT license
 */

"use strict";!function(){var e=angular.module("instant-codec",["ab-base64"]);!function(){var n=function(){function e(e,n,t,r){var o=n(),i={utf8:t(),base64:t(),base64Stripped:t()};o.connect("utf8",i.utf8),o.connect("base64",i.base64),o.connect("base64Stripped",i.base64Stripped);for(var c in i)r(i[c],e,c);i.utf8.value("Enter text here!"),e.isGood=this.isGood.bind(this),e.error=this.error.bind(this),e.scope=e,this._block=o}var n=void 0;e.prototype={};var t=e.prototype;return t.isGood=function(){return this._block.error()===n},t.error=function(){return this._block.error()},e}();e.controller("base64ConversionController",["$scope","base64Block","refWire","bindWire",n])}(),e.directive("base64Converter",[function(){return{restrict:"A",scope:{},controller:"base64ConversionController"}}]),e.factory("base64Block",["base64","base64Stripped",function(e,n){var t=function(t,r){r.base64=e.encode(t.utf8),r.base64Stripped=n.encode(r.base64)},r=function(t,r){r.utf8=e.decode(t.base64),r.base64Stripped=n.encode(t.base64)},o=function(t,r){r.base64=n.decode(t.base64Stripped),r.utf8=e.decode(r.base64)};return function(){return new LiveBlocks.ImmediateBlock({pins:{utf8:t,base64:r,base64Stripped:o}})}}]),e.constant("base64Stripped",function(){var e=function(e){return e.split("=",1)[0]},n=function(e){var n=[];return e.length%4!==0&&(n.length=5-e.length%4),e+n.join("=")};return{encode:e,decode:n}}()),e.constant("bindWire",function(e,n,t){var r=t.split("."),o=function(e){for(var t=n,o=0;o<r.length;o++)o<r.length-1?t=t[r[o]]:t[r[o]]=e};e.on("value",o);var i=n.$watch(t,function(n){e.value(n)}),c=function(){i(),e.off("value",o)};return n.$on("$destroy",c),c}),e.constant("refWire",function(){return new LiveBlocks.Wire})}();
